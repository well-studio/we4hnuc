<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-lazy-init="true">
    <!-- 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl"
                  value="jdbc:mysql://127.0.0.1:3306/we4hnuc?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
        <property name="maxPoolSize" value="200"/>
        <property name="minPoolSize" value="10"/>
        <property name="initialPoolSize" value="20"/>
        <property name="maxIdleTime" value="600"/>
        <property name="acquireIncrement" value="5"/>
        <property name="maxStatements" value="5"/>
        <property name="idleConnectionTestPeriod" value="60"/>
    </bean>


    <!-- 添加hibernate的框架，参照外部数据源 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置映射文件 -->
        <property name="mappingLocations">
            <list>
                <value>classpath:edu/hnuc/we/entity/*.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <!-- 配置数据库方言 -->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQLDialect
                </prop>
                <!-- 配置是否在控制台输出 -->
                <prop key="hibernate.show_sql">false</prop><!-- 测试阶段为true -->
                <prop key="hibernate.format_sql">false</prop><!-- 测试阶段为true -->
                <prop key="hibernate.current_session_context_class">
                    thread
                </prop>
            </props>
        </property>
    </bean>

    <!-- 添加事物管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义注释驱动 -->
    <tx:annotation-driven transaction-manager="txManager"/>


    <!-- dao层的bean管理 -->
    <bean id="lostAndFoundDao" class="edu.hnuc.we.dao.impl.LostAndFoundDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="userDao" class="edu.hnuc.we.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="adminConfigDao" class="edu.hnuc.we.dao.impl.AdminConfigDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- service层的bean管理 -->
    <bean id="lostAndFoundService" class="edu.hnuc.we.service.impl.LostAndFoundServiceImpl">
        <property name="lostAndFoundDao" ref="lostAndFoundDao"></property>
    </bean>
    <bean id="userService" class="edu.hnuc.we.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <bean id="adminConfigService" class="edu.hnuc.we.service.impl.AdminConfigServiceImpl">
        <property name="adminConfigDao" ref="adminConfigDao"></property>
    </bean>

    <!-- action层的bean管理 -->
    <bean id="lostAndFoundAction" class="edu.hnuc.we.action.LostAndFoundAction"
          scope="prototype">
        <property name="lostAndFoundService" ref="lostAndFoundService"></property>
    </bean>
    <bean id="UserAction" class="edu.hnuc.we.action.UserAction"
          scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>
    <bean id="AdminConfigAction" class="edu.hnuc.we.action.AdminConfigAction"
          scope="prototype">
        <property name="adminConfigService" ref="adminConfigService"></property>
    </bean>


</beans>
